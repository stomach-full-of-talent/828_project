app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: advanced-chat
  name: 信息中心-数据库设计说明书
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/openai_api_compatible:0.0.16@77274df8fe2632cac66bfd153fcc75aa5e96abbe92b5c611b8984ad9f4cd4457
kind: app
version: 0.3.1
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 15
        file_size_limit: 200
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: answer
        targetType: llm
      id: 1750745872789-source-llm-target
      source: '1750745872789'
      sourceHandle: source
      target: llm
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: code
      id: llm-source-1750745919709-target
      source: llm
      sourceHandle: source
      target: '1750745919709'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: knowledge-retrieval
      id: 1750745919709-source-1750745945573-target
      source: '1750745919709'
      sourceHandle: source
      target: '1750745945573'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: knowledge-retrieval
        targetType: llm
      id: 1750745945573-source-1750745974941-target
      source: '1750745945573'
      sourceHandle: source
      target: '1750745974941'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 1750745974941-source-answer-target
      source: '1750745974941'
      sourceHandle: source
      target: answer
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: start
        targetType: if-else
      id: 1750745831077-source-1750989845580-target
      source: '1750745831077'
      sourceHandle: source
      target: '1750989845580'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: answer
      id: 1750989845580-true-1750745872789-target
      source: '1750989845580'
      sourceHandle: 'true'
      target: '1750745872789'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: answer
      id: 1750989845580-0bbc03ba-0c28-4ab1-90ad-cbdf921e771d-1750745872789-target
      selected: false
      source: '1750989845580'
      sourceHandle: 0bbc03ba-0c28-4ab1-90ad-cbdf921e771d
      target: '1750745872789'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: answer
      id: 1750989845580-false-1750989891188-target
      source: '1750989845580'
      sourceHandle: 'false'
      target: '1750989891188'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: answer
        targetType: llm
      id: 1750989891188-source-1750989907796-target
      source: '1750989891188'
      sourceHandle: source
      target: '1750989907796'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: code
      id: 1750989907796-source-17509899569250-target
      source: '1750989907796'
      sourceHandle: source
      target: '17509899569250'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: if-else
      id: 17509899569250-source-1750989981588-target
      source: '17509899569250'
      sourceHandle: source
      target: '1750989981588'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: llm
      id: 1750989981588-true-1750990016645-target
      source: '1750989981588'
      sourceHandle: 'true'
      target: '1750990016645'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: answer
      id: 1750990016645-source-1750990047237-target
      source: '1750990016645'
      sourceHandle: source
      target: '1750990047237'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: answer
      id: 1750989981588-02a74572-ef71-43ea-b414-1450ffca1d4c-1750745872789-target
      source: '1750989981588'
      sourceHandle: 02a74572-ef71-43ea-b414-1450ffca1d4c
      target: '1750745872789'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: if-else
        targetType: answer
      id: 1750989981588-false-1750990089541-target
      source: '1750989981588'
      sourceHandle: 'false'
      target: '1750990089541'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: 开始
        type: start
        variables:
        - label: 是否开启上下文记忆功能（默认不开启，检索知识库更迅速。开启后模型可以根据对话之前的内容进行回答，用时会增加）
          max_length: 48
          options:
          - 是
          - 否
          required: false
          type: select
          variable: memory
      height: 90
      id: '1750745831077'
      position:
        x: 30
        y: 325
      positionAbsolute:
        x: 30
        y: 325
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: /home/user/Desktop/MODELFILE/Qwen3-30B-A3B-think-2507
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: eb51d9ac-4dbc-4f23-a050-d96c8f4bea98
          role: system
          text: '你是一个专业的知识库检索引擎优化师。你的任务是将用户的自然语言问题，转换为一个由空格分隔的、高度优化的关键词查询字符串。

             

            请遵循以下规则：

            - 只提取核心的名词、技术术语、专有名词和关键操作。

            - 过滤掉所有停止词、疑问词、口语化表达和不影响核心语义的词。

            - 输出结果必须是一行文本，关键词之间用单个空格隔开，结尾不要有任何标点或说明。

             

            ---

            [示例开始]

             

            问题: 你好，请问在Dify里怎么创建一个RAG应用啊？我找不到入口。

            输出: Dify 创建 RAG 应用

             

            问题: 我想了解一下你们的私有化部署方案，特别是对服务器硬件有什么要求。

            输出: 私有化部署 服务器 硬件 要求

             

            问题: 把知识库接入企业微信的步骤是什么？

            输出: 知识库 接入 企业微信 步骤

             

            [示例结束]

            ---'
        - id: 030de7f0-8f4d-4c11-88c3-1eeab5bcbf6a
          role: user
          text: 用户问题：{{#sys.query#}}
        selected: false
        title: 提取关键词内容
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: llm
      position:
        x: 2151
        y: 325
      positionAbsolute:
        x: 2151
        y: 325
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1750745974941.text#}}


          **当前知识库包含：SDD-11-003_DynaTeam 数据库设计说明书**

          **如小助手回答结果不准确，请缩窄提问范围以获得更加精确的结果，或在问题前加上库名，如：“重新检索XXX库：{{#sys.query#}}”**

          **注：仅上传文档到知识库并不能直接使用小助手问问题，还需联系信息中心管理员检查知识库内容未出现格式错误并将知识库编入Dify工作流后才能正常使用小助手问问题。**'
        desc: ''
        selected: false
        title: 直接回复
        type: answer
        variables: []
      height: 284
      id: answer
      position:
        x: 3363
        y: 325
      positionAbsolute:
        x: 3363
        y: 325
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '

          当前知识库包含：SDD-11-003_DynaTeam 数据库设计说明书

          知识库正在检索，请耐心等待~'
        desc: ''
        selected: false
        title: 直接回复 2
        type: answer
        variables: []
      height: 134
      id: '1750745872789'
      position:
        x: 1848
        y: 325
      positionAbsolute:
        x: 1848
        y: 325
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import re\ndef main(arg1: str) -> dict:\n    clean_answer = re.sub(r'<think[^>]*>.*?</think>','',arg1,flags=re.DOTALL)\n\
          \    final_answer = re.sub(r'^\\n+','',clean_answer)\n    return {\n   \
          \     \"result\": final_answer,\n    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 代码执行
        type: code
        variables:
        - value_selector:
          - llm
          - text
          variable: arg1
      height: 54
      id: '1750745919709'
      position:
        x: 2454
        y: 325
      positionAbsolute:
        x: 2454
        y: 325
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        dataset_ids:
        - k5mFTz7oFb1IDsXJ+Lj8Cj6L7ofU8qslfoEMIu24nY/5S7Bf7du2YW5tox/dLT2U
        desc: ''
        multiple_retrieval_config:
          reranking_enable: false
          reranking_mode: reranking_model
          reranking_model:
            model: /home/user/Desktop/MODELFILE/bge-reranker-v2-m3
            provider: langgenius/openai_api_compatible/openai_api_compatible
          score_threshold: null
          top_k: 20
        query_variable_selector:
        - '1750745919709'
        - result
        retrieval_mode: multiple
        selected: false
        title: 知识检索
        type: knowledge-retrieval
      height: 92
      id: '1750745945573'
      position:
        x: 2757
        y: 325
      positionAbsolute:
        x: 2757
        y: 325
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: true
          variable_selector:
          - '1750745945573'
          - result
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: /home/user/Desktop/MODELFILE/Qwen3-30B-A3B-think-2507
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 10e2e377-ff32-42df-a946-2435eac317bd
          role: system
          text: '角色

            你是奥迪威公司的智能客服，擅长根据知识库内容进行回答用户的问题。


            背景

            严格根据知识库内容回答用户问题，对于用户理解私有文档十分重要。


            任务

            严格根据下面知识库的内容进行回答用户的问题。请逐一检查每一项结果是否与用户问题匹配。如果知识库中没有相关内容，请明确告知用户知识库中没有相关信息，不要提供猜测或无关的答案。


            注意事项：检索正确的结果请以表格的形式展现。'
        - id: 356d4bcd-5f26-41e4-932d-34829a27df45
          role: user
          text: '知识库上下文：{{#context#}}

            用户问题：{{#sys.query#}}'
        selected: false
        title: 直接输出
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1750745974941'
      position:
        x: 3060
        y: 325
      positionAbsolute:
        x: 3060
        y: 325
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: empty
            id: e3923bab-d0c4-4264-9c4e-30faf68969bc
            value: ''
            varType: string
            variable_selector:
            - '1750745831077'
            - memory
          id: 'true'
          logical_operator: and
        - case_id: 0bbc03ba-0c28-4ab1-90ad-cbdf921e771d
          conditions:
          - comparison_operator: is
            id: e31b6aaf-a8cd-4ab7-bb03-f0a8ce1163d1
            value: 否
            varType: string
            variable_selector:
            - '1750745831077'
            - memory
          id: 0bbc03ba-0c28-4ab1-90ad-cbdf921e771d
          logical_operator: and
        desc: ''
        selected: false
        title: 条件分支
        type: if-else
      height: 174
      id: '1750989845580'
      position:
        x: 333
        y: 325
      positionAbsolute:
        x: 333
        y: 325
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '**您已开启上下文记忆功能，回答时长会有所增加，请耐心等待。如需关闭记忆功能，请点击左上角开启新对话~**'
        desc: ''
        selected: false
        title: 直接回复 3
        type: answer
        variables: []
      height: 134
      id: '1750989891188'
      position:
        x: 636
        y: 514.5
      positionAbsolute:
        x: 636
        y: 514.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        memory:
          query_prompt_template: '{{#sys.query#}}'
          role_prefix:
            assistant: ''
            user: ''
          window:
            enabled: false
            size: 50
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: /home/user/Desktop/MODELFILE/Qwen3-30B-A3B-think-2507
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 1bab2604-e9c9-4f8d-b725-1dd81c68e5e4
          role: system
          text: '#### **# 核心任务**

            你的任务是作为一个智能分类器。分析给定的 `[记忆窗口]` (即上下文) 和 `[用户问题]`，判断该问题是否**强依赖**于`[记忆窗口]`来生成一个准确、连贯且符合用户意图的回答。

             

            ---

             

            #### **# 输入定义**

            *   `[记忆窗口]`：代表之前的对话历史或背景信息。

            *   `[用户问题]`：代表用户当前提出的问题。

             

            ---

             

            #### **# 判断规则**

             

            **首要规则：**

            *   如果 `[记忆窗口]` 为空或明确包含“重新检索知识库”或类似表述，**必须**输出 "no"。

             

            **特殊指令覆盖：**

            *   如果 `[用户问题]` 中明确包含“无需检索知识库”或类似表述，**必须**输出 "yes"。

             

            **如果满足以下任一条件，输出 "yes" (代表“依赖上下文”)：**

             

            1.  **直接引用与显式指令**：问题直接询问、引用 `[记忆窗口]` 的内容，或包含明确指令要求基于上下文进行操作。

                *   **关键词示例**：“根据上面说的”、“总结一下”、“继续”、“那这个呢？”、“详细说说”、“为什么会这样？”

             

            2.  **上下文延续与深化**：问题是 `[记忆窗口]` 话题的自然延续、追问、比较、要求举例、或进行推断。即使没有明确的指代词，逻辑上也紧密相连。

                *   **示例**：

                    *   记忆窗口：“苹果公司发布了新款iPhone。”

                    *   用户问题：“它的摄像头有多少像素？”

             

            3.  **寻求相关替代方案**：问题在探讨与 `[记忆窗口]` 主题相关的其他选项、解决方案或可能性。

                *   **示例**：

                    *   记忆窗口：“A方案的优点是成本低。”

                    *   用户问题：“那B方案呢？”

             

            **如果满足以下任一条件，输出 "no" (代表“不依赖上下文”)：**

             

            1.  **开启全新话题**：问题与 `[记忆窗口]` 的主题、实体、意图完全无关。

                *   **示例**：

                    *   记忆窗口：“我们来讨论一下全球气候变化。”

                    *   用户问题：“给我讲个笑话吧。”

             

            2.  **可独立回答的通用问题**：问题虽然可能与上下文主题有微弱关联，但它是一个可以独立、完整回答的通用知识性问题，无需依赖 `[记忆窗口]`
            的具体信息。

                *   **示例**：

                    *   记忆窗口：“我正在看关于特斯拉Model Y的评测。”

                    *   用户问题：“特斯拉是哪个国家的公司？” (这个问题本身是独立的，不需要评测的具体内容)

             

            ---

             

            #### **# 案例学习**

             

            *   **案例 1 (yes)**

                *   `[记忆窗口]`：“AI的发展为社会带来了许多便利，例如在医疗领域的智能诊断和金融领域的风险控制。”

                *   `[用户问题]`：“它在未来还可能有哪些应用？”

                *   **分析**：属于“上下文延续与深化”。

             

            *   **案例 2 (yes)**

                *   `[记忆窗口]`：“配料：面粉500克，水250克，酵母5克，糖10克。首先将酵母和糖溶于温水中。”

                *   `[用户问题]`：“然后呢？”

                *   **分析**：属于“直接引用与显式指令”。

             

            *   **案例 3 (no)**

                *   `[记忆窗口]`：“我计划下周去北京旅游，有什么推荐的景点吗？”

                *   `[用户问题]`：“推荐一部最近好看的电影。”

                *   **分析**：属于“开启全新话题”。

             

            *   **案例 4 (no)**

                *   `[记忆窗口]`：“iPhone 15 Pro Max采用了A17 Pro芯片，性能非常强大。”

                *   `[用户问题]`：“苹果公司的股价是多少？”

                *   **分析**：属于“可独立回答的通用问题”。虽然都和苹果有关，但回答股价问题无需知道芯片信息。

             

            *   **案例 5 (no)**

                *   `[记忆窗口]`： (空)

                *   `[用户问题]`：“你好。”

                *   **分析**：“首要规则”。

             

            ---

             

            #### **# 输出要求**

            *   严格遵循上述规则，仅输出 "yes" 或 "no"。

            *   禁止添加任何解释、理由或其他无关字符。'
        selected: false
        title: 判断是否需要根据上下文窗口回答
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1750989907796'
      position:
        x: 939
        y: 514.5
      positionAbsolute:
        x: 939
        y: 514.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import re\ndef main(arg1: str) -> dict:\n    clean_answer = re.sub(r'<think[^>]*>.*?</think>','',arg1,flags=re.DOTALL)\n\
          \    final_answer = re.sub(r'^\\n+','',clean_answer)\n    return {\n   \
          \     \"result\": final_answer,\n    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 代码执行
        type: code
        variables:
        - value_selector:
          - '1750989907796'
          - text
          variable: arg1
      height: 54
      id: '17509899569250'
      position:
        x: 1242
        y: 514.5
      positionAbsolute:
        x: 1242
        y: 514.5
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: is
            id: e113f4b9-cf13-41e8-b8bd-1a3b1158d169
            value: 'yes'
            varType: string
            variable_selector:
            - '17509899569250'
            - result
          id: 'true'
          logical_operator: and
        - case_id: 02a74572-ef71-43ea-b414-1450ffca1d4c
          conditions:
          - comparison_operator: contains
            id: 5d78883e-1902-4bda-b092-1a5c810f5ec6
            value: 'no'
            varType: string
            variable_selector:
            - '17509899569250'
            - result
          logical_operator: and
        desc: ''
        selected: false
        title: 判断是否需要根据上下文记忆窗口回复
        type: if-else
      height: 174
      id: '1750989981588'
      position:
        x: 1545.0000000000002
        y: 503.18993219337517
      positionAbsolute:
        x: 1545.0000000000002
        y: 503.18993219337517
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        memory:
          query_prompt_template: '{{#sys.query#}}'
          role_prefix:
            assistant: ''
            user: ''
          window:
            enabled: false
            size: 50
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: /home/user/Desktop/MODELFILE/Qwen3-30B-A3B-think-2507
          provider: langgenius/openai_api_compatible/openai_api_compatible
        prompt_template:
        - id: 1b3d0158-8d7b-43dc-8540-9f78bde96584
          role: system
          text: "## 核心任务\n严格按照以下逻辑和信息源优先级，生成一个与用户问题高度相关、准确且连贯的回答。\n\n## 信息源优先级\n1.\
            \  **记忆窗口内容（最高）**\n2.  **（可选）外部知识库**\n3.  **模型内置知识（最低，用于补充和润色）**\n\n##\
            \ 执行逻辑 (IF-ELSE结构)\n**IF** 用户明确表示“无需检索知识库”：\n    *   **THEN** 执行【**流程A：无知识库检索**】。\n\
            **ELSE** (默认情况):\n    *   **THEN** 执行【**流程B：标准检索**】。\n\n---\n### 【流程A：无知识库检索】\n\
            1.  **分析**：仅分析“记忆窗口内容”（如果存在）。\n2.  **整合**：以“记忆窗口内容”为核心，结合模型内置知识进行回答。\n\
            3.  **生成**：生成直接回应用户问题的答案。\n\n### 【流程B：标准检索】\n1.  **分析**：分析“记忆窗口内容”、“外部知识库”中的所有相关信息。\n\
            2.  **整合**：\n    *   以“记忆窗口内容”为最高优先级信息，整合所有来源的信息。\n    *   如果信息源之间存在冲突，优先采信“记忆窗口内容”。\n\
            3.  **生成**：结合模型内置知识，生成一个连贯、准确且直接回应用户问题的答案。\n"
        selected: false
        title: 回答上下文窗口问题
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1750990016645'
      position:
        x: 1848
        y: 556.5
      positionAbsolute:
        x: 1848
        y: 556.5
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1750990016645.text#}}


          **当前知识库包含：SDD-11-003_DynaTeam 数据库设计说明书**

          **如小助手回答结果不准确，请缩窄提问范围以获得更加精确的结果，或在问题前加上库名，如：“重新检索XXX库：{{#sys.query#}}”**

          **注：仅上传文档到知识库并不能直接使用小助手问问题，还需联系信息中心管理员检查知识库内容未出现格式错误并将知识库编入Dify工作流后才能正常使用小助手问问题。**'
        desc: ''
        selected: false
        title: 直接回复 4
        type: answer
        variables: []
      height: 284
      id: '1750990047237'
      position:
        x: 2151
        y: 454
      positionAbsolute:
        x: 2151
        y: 454
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '

          {{#1750989907796.text#}}'
        desc: ''
        selected: false
        title: 直接回复 5
        type: answer
        variables: []
      height: 105
      id: '1750990089541'
      position:
        x: 1848
        y: 685.5
      positionAbsolute:
        x: 1848
        y: 685.5
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: -661.3121561690507
      y: 118.94192012853841
      zoom: 0.5743491774985182
